<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
	<!ENTITY gfdl SYSTEM "gfdl.dbk">
	<!ENTITY date "February 2009">
]>
<article id="index" lang="en">
<articleinfo>
	<date>2009-02-16</date>
	<title>Florence documentation</title>
	<abstract><para>This document describes how to install, configure and use Florence virtual keyboard.</para></abstract>
	<authorgroup>
		<author>
			<firstname>François</firstname>
			<surname>Agrech</surname>
			<email>f.agrech@gmail.com</email>
		</author>
	</authorgroup>
	<copyright><year>2008,2009</year><holder>François Agrech</holder></copyright>
	<legalnotice><para>Copyright (c) 2008, 2009 François Agrech.</para>
	<para>Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in the section entitled "GNU Free Documentation License".</para></legalnotice>
</articleinfo>
<indexterm><primary>florence</primary></indexterm>
<indexterm><primary>virtual keyboard</primary></indexterm>
<sect1 id="intro">
	<title>Introduction</title>
	<para>Florence is an extensible scalable virtual keyboard for GNOME. You need it if you can't use a real hardware keyboard, for example because you are disabled, your keyboard is broken or because you use a tablet PC, but you must be able to use a pointing device (as a mouse, a trackball or a touchscreen); If you can't use a pointing device, there is <ulink url="http://www.gok.ca/gok">gok</ulink>, which can be used with just simple switches.</para>
	<para>Florence stays out of your way when you don't need it: it appears on the screen only when you need it.
A Timer-based auto-click functionality is available to help disabled people having difficulties to click.</para>
	<para>Florence is primarily intended to be used with the GNOME desktop, although it can be used on any desktop environment (see the section about running Florence without GNOME).</para>
</sect1>
<sect1 id="install">
	<title>Install</title>
	<para>If it's not installed already, you will need to build Florence from the terminal, unless you are on <ulink url="http://fedoraproject.org">Fedora</ulink> 9 or later (Thanks to Simon Wesp), as it is the only distribution to include Florence as a package, as of December, the 8th of 2008. If you can't use a keyboard, you may find yourself in a catch-22 situation where you can't install Florence because you can't use Florence. If you are disabled, you may need to ask someone to install it for you and if you have a tablet PC, you may need to find a creative way to install Florence, such as installing from ssh or temporarily use a real keyboard.</para>
	<para>On Fedora, just use the package manager. From the command line, you can type:
<prompt>#</prompt> <userinput>yum install florence</userinput>
	</para>
	<para>Make sure you have the latest version of Florence (0.3.3 as of February, the 16th of 2009). You can get it at <ulink url="http://sourceforge.net/project/platformdownload.php?group_id=217749">Sourceforge</ulink></para>
	<sect2>
		<title>Preparing the dependencies</title>
		<para>In order to build Florence, you need a build environment with the following commands: make, scrollkeeper and a C compiler, along with the following package dependencies:</para>
		<orderedlist>
			<listitem><para><ulink url="http://www.gtk.org/download-linux.html">gtk+</ulink> (version >= 2.10)</para></listitem>
			<listitem><para><ulink url="http://ftp.gnome.org/pub/gnome/sources/at-spi/">cspi</ulink> (version >= 1.0)</para></listitem>
			<listitem><para><ulink url="http://ftp.gnome.org/pub/gnome/sources/GConf/">libgconf</ulink> (version >= 2.0)</para></listitem>
			<listitem><para><ulink url="http://ftp.gnome.org/pub/gnome/sources/libglade/">libglage</ulink> (version >=2.0)</para></listitem>
			<listitem><para><ulink url="http://ftp.gnome.org/pub/gnome/sources/libxml2/">libxml</ulink> (version >=2.0)</para></listitem>
			<listitem><para><ulink url="http://www.cairographics.org/download/">cairo</ulink></para></listitem>
			<listitem><para><ulink url="http://ftp.gnome.org/pub/GNOME/sources/librsvg/">librsvg</ulink></para></listitem>
			<listitem><para>(Optional: --disable-nls configure option to disable)<ulink url="http://www.gnu.org/software/gettext/">gettext</ulink></para></listitem>
			<listitem><para>(Optional: --with-docs configure option) libgnome (version >=2.0)</para></listitem>
		</orderedlist>
		<para>How to install those dependencies is dependant on your distribution. Usually, you need to install the devel packages of the dependencies. Below is a list of how to do it via the command line interface on the most common distributions. If your distribution is not listed and you don't know how to install, you may check with your distribution support.</para>
		<orderedlist>
			<listitem>
				<para><ulink url="http://www.mandriva.com/">Mandriva</ulink>
				<screen>
<prompt>$</prompt> <userinput>su</userinput>
<prompt>#</prompt> <userinput>urpmi gcc make libxml2-dev libgconf2-dev libglade2-devel \</userinput>
<prompt>></prompt> <userinput>at-spi-devel libcairo-devel libgnome2-devel librsvg-devel gettext</userinput>
				</screen></para>
			</listitem>
			<listitem>
				<para><ulink url="http://www.ubuntu.com/">Ubuntu</ulink>
				<screen>
<prompt>$</prompt> <userinput>sudo apt-get install build-essential libxml2-dev libgconf2-dev \</userinput>
<prompt>></prompt> <userinput>libglade2-dev libatspi-dev libcairo2-dev libgnome2-dev librsvg-dev gettext</userinput>
				</screen></para>
			</listitem>
		</orderedlist>
	</sect2>
	<sect2>
		<title>Installing</title>
		<para>Installing Florence is like installing any program that uses the GNU autotools. Open a terminal and type the following commands:</para>
		<screen>
<prompt>$</prompt> <userinput>tar -xjvf florence-0.3.3.tar.bz2</userinput>
<prompt>$</prompt> <userinput>cd florence-0.3.3</userinput>
<prompt>$</prompt> <userinput>./configure --prefix=/usr</userinput>
<prompt>$</prompt> <userinput>make</userinput>
<prompt>$</prompt> <userinput>su -c "make install"</userinput>
		</screen>
		<para>For Ubuntu, replace the last command with:</para><screen><prompt>$</prompt> <userinput>sudo make install</userinput></screen>
		<para>If you don't want to install in /usr (configure prefix), don't forget to add the path to /etc/scrollkeeper.conf file, so yelp can find Florence documentation.</para>
		<para>Check the list of other configure options available with:</para>
		<screen>
<prompt>$</prompt> <userinput>./configure --help</userinput>
		</screen>
	</sect2>
	<sect2>
		<title>Uninstalling</title>
		<para>Uninstalling is as easy as installing.</para>
		<screen>
<prompt>$</prompt> <userinput>cd florence-0.3.3</userinput>
<prompt>$</prompt> <userinput>su -c "make uninstall"</userinput>
		</screen>
		<para>For Ubuntu:</para><screen><prompt>$</prompt> <userinput>sudo make uninstall</userinput></screen>
	</sect2>
</sect1>
<sect1 id="usage">
	<title>Usage</title>
	<para>Florence aims at being easy. To launch Florence from the command line, type:</para>
		<screen>
<prompt>$</prompt> <userinput>florence</userinput>
		</screen>
	<para>Or, from GNOME desktop, click <guimenu>Applications</guimenu>-><guisubmenu>Accessibility</guisubmenu>-><guimenuitem>Florence Virtual keyboard</guimenuitem>.
If you prefer that Florence is launched at GNOME startup, choose the menu item <guimenu>System</guimenu>-><guisubmenu>Preferences</guisubmenu>-><guimenuitem>Sessions</guimenuitem>, click on the <guibutton>Startup programs</guibutton> tab, then click <guibutton>Add</guibutton> and enter <command>/usr/bin/florence</command> so Florence is launched with GNOME at next boot.
	</para>
	<para>Florence requires that GNOME accessibility be activated (it means that the at-spi daemon is running). If it is not activated, Florence will not start, but it will suggest you activate accessibility and restart GNOME instead. When GNOME is restarted and accessibility is activated, Florence will run as normal.</para>
	<para>When Florence is running, an icon should appear in your notification area, usually at the top right corner of the screen. Clicking of the icon makes Florence appear or disappear from the screen. Right clicking on it makes a menu appear. On this menu, you can use the <guimenuitem>quit</guimenuitem> item to stop Florence.</para>
	<sect2>
		<title>Florence modes</title>
		<para>Florence has several states affecting how it functions and how it interacts with the user.</para>
		<para>In auto-click mode, you don't have to use any mouse button to use the keyboard. You just have to put the pointer over a key and a timer is triggered. If the pointer stays over the key until the timer expires, the key is automatically 'clicked' (pressed). The duration of the timer can be set in the configuration GUI in milliseconds. When it is set to 0ms, auto-click mode is off: you have to point a key and click to trigger a key press.</para>
		<para>Another mode is the auto-hide mode. In this mode, Florence hides itself when it detects you don't need it. There are several rules to detect when Florence is needed and those rules rely heavily on the <ulink url="http://en.wikipedia.org/wiki/AT-SPI">at-spi</ulink> framework. For instance, Florence will be shown if you focus an editable widget, as it should probably be edited with a keyboard. Florence will hide itself when the editable widget is unfocused. This does not work if the widget isn't accessible with <ulink url="http://en.wikipedia.org/wiki/AT-SPI">at-spi</ulink>. In particular, QT3 widgets may not work properly with Florence. You should make sure your applications support at-spi if you intend to use Florence in hidden mode. When this mode is off, Florence is always visible on the screen.</para>
		<figure id="extensions">
			<title>Florence extensions</title>
			<screenshot>
				<mediaobject>
					<imageobject><imagedata fileref="figures/florence.png" format="PNG"/></imageobject>
					<textobject><phrase>Shows the extensions available.</phrase></textobject>
				</mediaobject>
			</screenshot>
		</figure>
		<para>Also, the keyboard layout can be extended with 3 extensions to the core keyboard. The arrows keypad is an extension added to the right of the core keyboard and contains the arrow keys along with navigation keys. The numpad extension contains the numeric keys and the function keys extension contains the function keys. Each extension can be activated and deactivated.</para>
	</sect2>
	<sect2 id="config">
		<title>Configuring</title>
			<figure id="settings">
				<title>Preferences dialog</title>
				<screenshot>
					<mediaobject>
						<imageobject><imagedata fileref="figures/settings.png" format="PNG"/></imageobject>
						<textobject><phrase>Shows the preferences dialog.</phrase></textobject>
					</mediaobject>
				</screenshot>
			</figure>
	<para>The configuration dialog is accessible via the systray icon (right click on it and select <guimenuitem>Preferences</guimenuitem>) or via the command line with the -c or --config switch: <command>florence --config</command>. Hacking configuration is possible via gconf (see the hacking section)</para>
		<para>The following options are configurable:</para>
		<orderedlist>
			<listitem><para>Style: select your style by clicking on the style icon.</para></listitem>
			<listitem><para>Keys colour: set the background colour of normal keys.</para></listitem>
			<listitem><para>Activated colour: set the background colour of the keys that are pressed or locked.</para></listitem>
			<listitem><para>Mouse over colour: set the background colour of the key that is under the pointer.</para></listitem>
			<listitem><para>Labels colour: set the colour of the symbol or text printed on keys.</para></listitem>
			<listitem><para>Navigation keys: activate/deactivate the arrows keypad.</para></listitem>
			<listitem><para>Numeric keys: activate/deactivate the numpad extension.</para></listitem>
			<listitem><para>Function keys: activate/deactivate the function keys extensions.</para></listitem>
			<listitem><para>Auto hide: switch auto-hide mode on and off.</para></listitem>
			<listitem><para>Decorated: decorates the window with a title bar.</para></listitem>
			<listitem><para>Transparent: allows you to see the windows behind the keyboard between the keys.</para></listitem>
			<listitem><para>Resizable: allow you to set the visual scale of the keyboard with the window manager.</para></listitem>
			<listitem><para>Task bar: make Florence appear in the desktop task bar.</para></listitem>
			<listitem><para>Always on top: tells to the window manager to always keep the keyboard on top of other windows.</para></listitem>
			<listitem><para>Auto-click: set the auto-click timer duration (0 deactivates the timer).</para></listitem>
		</orderedlist>
	</sect2>
	<sect2>
		<title>Command line options</title>
		<para>Florence accepts the following command line options:</para>
		<orderedlist>
			<listitem><para>-h (--help): print help message and exit.</para></listitem>
			<listitem><para>-V (--version): print Florence version and exit.</para></listitem>
			<listitem><para>-c (--config): open configuration dialog.</para></listitem>
			<listitem><para>-d (--debug): launch Florence in verbose mode.</para></listitem>
		</orderedlist>
	</sect2>
</sect1>
<sect1 id="tips">
	<title>Using Florence without GNOME</title>
	<para>Florence is primarily intended to be used with the GNOME desktop. It makes use of the libraries that are commonly installed with a GNOME desktop. However, you can install those libraries on any desktop in order to run Florence. The packages necessary to have all the libraries are listed in the install section.</para>
	<para>For Florence to function, you need to start the at-spi registry daemon at session startup: Start at-spi registry daemon before Florence (at session startup):</para>
	<orderedlist>
		<listitem><para>Gentoo:</para>
		<screen>
<prompt>$</prompt> <userinput>/usr/libexec/at-spi-registryd &amp;</userinput>
		</screen></listitem>
		<listitem><para>Mandriva:</para>
		<screen>
<prompt>$</prompt> <userinput>/usr/lib/at-spi-registryd &amp;</userinput>
		</screen></listitem>
	</orderedlist>
	<para>Some distros may put the at-spi-registryd command elsewhere. Use the find command to find out where your distro put at-spi-registryd:</para>
	<screen>
<prompt>$</prompt> <userinput>find /usr -name at-spi-registryd</userinput>
	</screen>
	<para>Adapt according to the result.</para>
	<para>GNOME does start the daemon automatically if it is configured with the <command>gnome-at-property</command> dialog.</para>
	<para>If your DE is XDG compliant (like XFCE), Florence should be accessible via the menu. Anyway, starting florence from the command line will always work. If you don't have a systray, you can install <ulink url="http://peksystray.sourceforge.net/">peksystray</ulink>. You can also access the preferences dialog with:</para>
	<screen>
<prompt>$</prompt> <userinput>florence --config</userinput>
	</screen>
	<para>Note that QT3 applications don't support at-spi. Therefore you should not deactivate always-on-screen mode on KDE3.</para>
</sect1>
<sect1 id="faq">
	<title>FAQ (Frequently Asked Questions)</title>
	<qandaset defaultlabel='qanda'>
		<qandaentry>
			<question>
				<para>Does Florence support internationnal keyboards with non-european characters (such as arab, chenese, punjabe, etc...)</para>
			</question>
			<answer>
				<para>Yes. Florence does support all the keyboards supported by X. In order to use a different keyboard, you have to use the setxkbmap command before launching Florence. For instance, to use an arabic keyboard, use the following command:</para>
		<screen>
<prompt>$</prompt> <userinput>setxkbmap ar &amp;&amp; florence</userinput>
		</screen>
			</answer>
		</qandaentry>
		<qandaentry>
			<question>
				<para>Florence launches successfully but the keyboard does not input key strokes.</para>
			</question>
			<answer>
				<para>Most probably, the at-spi-registryd daemon is not running. You should start the at-spi-registryd daemon at session startup on your Desktop environment. If you are using GNOME, use the gnome-at-properties dialog for that.</para>
			</answer>
		</qandaentry>
	</qandaset>
</sect1>
<sect1 id="hacking">
	<title>Hacking</title>
	<para>Some extra configuration options are available in GConf (under apps/florence). You can modify configuration parameters from the configuration menu as well as from gconftool-2 or gconf-editor.</para>
	<para>The gconf key apps/florence/layout/file contains the path to the keyboard layout file. It is an XML file that you can copy and modify.</para>
</sect1>
<sect1 id="gethelp">
        <title>Getting help</title>
        <para>You can get help on the <ulink url="https://sourceforge.net/forum/forum.php?forum_id=784280">forum</ulink>, or you can ask for help by email at f.agrech@gmail.com</para>
</sect1>
<sect1 id="help">
	<title>Contribute</title>
	<para>If you want to help the Florence project, please send an email to f.agrech@gmail.com</para>
</sect1>
&gfdl;
</article>

