<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0"
	xmlns="http://www.w3.org/2000/svg"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:flo="http://florence.sourceforge.net"
	xmlns:svg="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink">

	<xsl:output version='1.0' method="xml" encoding='UTF-8'/>
	<xsl:template match="/">
		<xsl:text disable-output-escaping="yes">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"&gt;
&lt;?xml-stylesheet type="text/css" href="../style.css"?&gt;</xsl:text>
		<svg xmlns="http://www.w3.org/2000/svg">
			<title>Florence's keyboard</title>
			<desc>Keyboard generated by florence: http://florence.sourceforge.net</desc>
			<xsl:apply-templates/>
		</svg>
	</xsl:template>

	<xsl:template match="flo:informations">
	</xsl:template>

	<xsl:template match="svg:svg">
		<symbol>
			<xsl:copy-of select="attribute::viewBox"/>
			<xsl:attribute name="preserveAspectRatio">xMidYMid</xsl:attribute>
			<xsl:choose>
				<xsl:when test="name(..)='shape'">
					<xsl:attribute name="id">s_<xsl:value-of select="../flo:name"/></xsl:attribute>
				</xsl:when>
				<xsl:otherwise>
					<xsl:attribute name="id"><xsl:value-of select="translate(../flo:name, '()[]|','')"/></xsl:attribute>
					<xsl:attribute name="fill">white</xsl:attribute>
					<xsl:attribute name="stroke">white</xsl:attribute>
					<xsl:attribute name="class">symbol</xsl:attribute>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:copy-of select="descendant::*"/>
		</symbol>
		<xsl:text>
</xsl:text>
	</xsl:template>

	<xsl:template match="flo:style">
		<defs>
			<xsl:for-each select="flo:shape">
				<xsl:apply-templates select="svg:svg"/>
			</xsl:for-each>
			<xsl:for-each select="flo:symbol">
				<xsl:apply-templates select="svg:svg"/>
			</xsl:for-each>
		</defs>
	</xsl:template>

	<xsl:template name="text">
		<xsl:param name="text" select="'?'"/>
		<text fill="white" transform="scale(20)" font-size="1" text-anchor="middle" dominant-baseline="central">
			<xsl:attribute name="x"><xsl:value-of select="flo:xpos"/></xsl:attribute>
			<xsl:attribute name="y"><xsl:value-of select="flo:ypos"/></xsl:attribute>
			<xsl:value-of select="$text"/>
		</text>
	</xsl:template>

	<xsl:template name="coords">
		<xsl:choose>
			<xsl:when test="string(flo:width)">
				<xsl:attribute name="x"><xsl:value-of select="flo:xpos - ( flo:width div 2 )"/></xsl:attribute>
				<xsl:attribute name="width"><xsl:value-of select="flo:width"/></xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
				<xsl:attribute name="x"><xsl:value-of select="flo:xpos - 1"/></xsl:attribute>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:choose>
			<xsl:when test="string(flo:height)">
				<xsl:attribute name="y"><xsl:value-of select="flo:ypos - ( flo:height div 2 )"/></xsl:attribute>
				<xsl:attribute name="height"><xsl:value-of select="flo:height"/></xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
				<xsl:attribute name="y"><xsl:value-of select="flo:ypos - 1"/></xsl:attribute>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="symbol">
		<xsl:choose>
			<xsl:when test="document('keymap.xml')">
				<xsl:variable name="code"><xsl:value-of select="flo:code"/></xsl:variable>
				<xsl:variable name="val"><xsl:value-of select="document('keymap.xml')/keymap/key[@code=$code]"/></xsl:variable>
				<xsl:choose>
					<xsl:when test="/flo:layout/flo:style/flo:symbol[flo:name=$val]/flo:label">
						<xsl:call-template name="text">
							<xsl:with-param name="text" select="/flo:layout/flo:style/flo:symbol[flo:name=$val]/flo:label"/>
						</xsl:call-template>
					</xsl:when>
					<xsl:when test="/flo:layout/flo:style/flo:symbol[flo:name=$val]/svg:svg">
						<use transform="scale(20)" width="2" height="2" dominant-baseline="central">
							<xsl:call-template name="coords"/>
							<xsl:attribute name="xlink:href">#<xsl:value-of select="translate($val, '()[]|','')"/></xsl:attribute>
						</use>
					</xsl:when>
					<xsl:otherwise>
						<xsl:call-template name="text">
							<xsl:with-param name="text" select="document('keymap.xml')/keymap/key[@code=$code]"/>
						</xsl:call-template>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="text">
					<xsl:with-param name="text" select="flo:code"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template match="flo:keyboard">
		<svg>
			<xsl:attribute name="id">
				<xsl:choose>
					<xsl:when test="../flo:name"><xsl:value-of select="translate(../flo:name,' ','')"/></xsl:when>
					<xsl:otherwise>Main</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
<!--			<xsl:attribute name="viewbox">0 0 <xsl:value-of select="flo:width"/>
				<xsl:text> </xsl:text>
				<xsl:value-of select="flo:height"/>
			</xsl:attribute>-->
			<xsl:attribute name="width"><xsl:value-of select="flo:width * 20"/></xsl:attribute>
			<xsl:attribute name="height"><xsl:value-of select="flo:height * 20"/></xsl:attribute>
			<xsl:choose>
				<xsl:when test="../flo:placement">
					<xsl:variable name="position" select="count(parent::*/preceding-sibling::flo:extension) + 1"/>
					<xsl:choose>
						<xsl:when test="../flo:placement='top'">
							<xsl:attribute name="x"><xsl:value-of select="0"/></xsl:attribute>
							<xsl:attribute name="y"><xsl:value-of select="0"/></xsl:attribute>
						</xsl:when>
						<xsl:when test="../flo:placement='right'">
							<xsl:attribute name="x"><xsl:value-of select="( sum(/flo:layout/flo:extension[flo:placement='right' and position() &lt; $position]/flo:keyboard/flo:width) + /flo:layout/flo:keyboard/flo:width ) * 20"/></xsl:attribute>
							<xsl:attribute name="y"><xsl:value-of select="sum(/flo:layout/flo:extension[flo:placement='top']/flo:keyboard/flo:height) * 20"/></xsl:attribute>
						</xsl:when>
					</xsl:choose>
				</xsl:when>
				<xsl:otherwise>
					<xsl:attribute name="x"><xsl:value-of select="sum(/flo:layout/flo:extension[flo:placement='left']/flo:keyboard/flo:width) * 20"/></xsl:attribute>
					<xsl:attribute name="y"><xsl:value-of select="sum(/flo:layout/flo:extension[flo:placement='top']/flo:keyboard/flo:height) * 20"/></xsl:attribute>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:for-each select="flo:key">
				<use transform="scale(20)" width="2" height="2" xlink:href="#s_default">
					<xsl:call-template name="coords"/>
					<xsl:if test="string(flo:shape)">
						<xsl:attribute name="xlink:href">#s_<xsl:value-of select="flo:shape"/></xsl:attribute>
					</xsl:if>
				</use>
				<xsl:if test="document('keymap.xml')">
					<xsl:variable name="actcode"><xsl:value-of select="flo:code"/></xsl:variable>
					<xsl:if test="document('keymap.xml')/keymap/key[@code=$actcode and @activated='yes']">
						<use transform="scale(20)" width="2" height="2" style="fill: red;" xlink:href="#s_default">
							<xsl:call-template name="coords"/>
							<xsl:if test="string(flo:shape)">
								<xsl:attribute name="xlink:href">#s_<xsl:value-of select="flo:shape"/></xsl:attribute>
							</xsl:if>
						</use>
					</xsl:if>
				</xsl:if>
				<xsl:text>
</xsl:text>
				<xsl:call-template name="symbol"/>
			</xsl:for-each>
		</svg>
	</xsl:template>

	<xsl:template match="flo:extension">
		<xsl:apply-templates select="flo:keyboard"/>
	</xsl:template>

</xsl:stylesheet>

